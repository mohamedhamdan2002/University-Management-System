@using UMS.Service.ViewModels.Role;
@using Microsoft.AspNetCore.Authorization;
@inject IAuthorizationService authorizationService;
@model List<RoleViewModel>
@{
    ViewData["Title"] = "List Of Roles";
}

<h1>All Rolles</h1>
<hr>
<a asp-action="Create" asp-controller="Role">CreatNewRole</a>
@if (Model.Any())
{
    foreach (var role in Model)
    {
        <div>
            <p>Role ID: @role.Id</p>
            <p>Roel Name : @role.Name</p>
@*             @if ((await authorizationService.AuthorizeAsync(User, "EditRolePolicy")).Succeeded)
            {
                <a asp-action="Edit" asp-controller="Role" asp-route-id="@role.Id">Edit</a>
            } *@
            <form method="post" asp-action="Delete" asp-controller="Role" asp-route-id="@role.Id">
                <span id="confirmDeleteSpan_@role.Id">
                    <span>Are you sure you want to delete?</span>
                    <button type="submit">Yes</button>
                    <a href="#" onclick="confirmDelete('@role.Id', false)">No</a>
                </span>
                <span id="deleteSpan_@role.Id">
                    <a href="#" onclick="confirmDelete('@role.Id', true)">Delete</a>
                </span>
            </form>
        </div>
        <hr>
    }
}
else
{
    <div>
        No Roles At Moment
    </div>
}

